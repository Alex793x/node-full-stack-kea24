{
  "code": "import express from 'express';\nimport { json } from 'body-parser';\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(json()); // Middleware to parse JSON data\n\nlet digimons = [\n    { id: 1, name: 'Agumon', type: 'Reptile' },\n    { id: 2, name: 'Gabumon', type: 'Reptile' },\n  ];\n  let nextId = 3;\n\n  \n  app.get('/digimons', (req, res) => {\n    res.status(200).send({ data: digimons});\n  });\n\n  app.get('/digimons/:id', (req, res) => {\n    const digimon = digimons.find(d => d.id === parseInt(req.params.id));\n    if (!digimon) {\n      return res.status(404).send({ error: 'Digimon not found' });\n    }\n    res.status(200).send({ data: digimon});\n  });\n  \n\n  \n  app.post('/digimons', (req, res) => {\n    const { name, type } = req.body;\n    const newDigimon = { id: nextId++, name, type };\n    digimons.push(newDigimon);\n    res.status(201).send({ data: newDigimon});\n  });\n\n\n  app.put('/digimons/:id', (req, res) => {\n    const digimon = digimons.find(d => d.id === parseInt(req.params.id));\n    if (!digimon) {\n      return res.status(404).send({ error: 'Digimon not found' });\n    }\n    const { name, type } = req.body;\n    digimon.name = name;\n    digimon.type = type;\n    res.status(200).send({ data: digimon});\n  });\n\n\n  app.patch('/digimons/:id', (req, res) => {\n    const digimon = digimons.find(d => d.id === parseInt(req.params.id));\n    if (!digimon) {\n      return res.status(404).send({ error: 'Digimon not found' });\n    }\n    const { name, type } = req.body;\n    if (name) digimon.name = name;\n    if (type) digimon.type = type;\n    res.status(200).send({ data: digimon});\n  });\n  \n\n  \n  app.delete('/digimons/:id', (req, res) => {\n    const index = digimons.findIndex(d => d.id === parseInt(req.params.id));\n    if (index === -1) {\n      return res.status(404).send({ error: 'Digimon not found' });\n    }\n    digimons.splice(index, 1);\n    res.status(204).send();\n  });\n  \n\n\n  app.options('/digimons/:id', (req, res) => {\n    res.header('Allow', 'GET, PUT, PATCH, DELETE, OPTIONS');\n    res.status(204).end();\n  });\n\n  \n  app.head('/digimons/:id', (req, res) => {\n    const digimon = digimons.find(d => d.id === parseInt(req.params.id));\n    if (!digimon) {\n      res.status(404).end();\n      return;\n    }\n\n    res.status(200).end();\n  });\n  \n\n\napp.listen(PORT, () => {\n  console.log(\"Digimon API running at http://localhost\", PORT);\n});\n"
}